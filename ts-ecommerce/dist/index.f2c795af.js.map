{"mappings":"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","sources":["<anon>","src/index.ts","src/api.ts","src/models/Product.ts","src/ui/gui.ts","src/utils/filtering.ts","src/utils/sorting.ts"],"sourcesContent":["class $023a96c5b2c8ed93$export$264ad599d7cef668 {\n    constructor(productData){\n        this.title = productData.title;\n        this.price = productData.price;\n        this.discountPercentage = productData.discountPercentage;\n        this.stock = productData.stock;\n        this.rating = productData.rating;\n        this.category = productData.category;\n        this.thumbnail = productData.thumbnail;\n    }\n    getDiscountedPrice() {\n        return Math.round(this.price * (1 - this.discountPercentage / 100) * 100) / 100;\n    }\n    updateStock() {\n        if (this.stock > 0) this.stock--;\n    }\n    getTitle() {\n        return this.title;\n    }\n    getThumbnailURL() {\n        return this.thumbnail;\n    }\n    getStock() {\n        return this.stock;\n    }\n    getRating() {\n        return this.rating;\n    }\n    // LÃ¤gg till getCategory-metod\n    getCategory() {\n        return this.category;\n    }\n}\n\n\nconst $b6a0b7007b404cc4$export$f2012bafb0501902 = async ()=>{\n    const url = \"https://dummyjson.com/products\";\n    try {\n        const res = await fetch(url);\n        if (!res.ok) throw new Error(\"Failed to fetch products\");\n        const data = await res.json();\n        return data.products.map((p)=>new (0, $023a96c5b2c8ed93$export$264ad599d7cef668)(p));\n    } catch (error) {\n        console.error(error);\n        return [];\n    }\n};\n\n\nconst $d3ff7d67e82b7d22$export$f4cee6d0d631069d = (products)=>{\n    const productContainer = document.querySelector(\"#productCardContainer\");\n    productContainer.innerHTML = \"\";\n    products.forEach((product)=>{\n        const card = document.createElement(\"div\");\n        const addToCartBtn = document.createElement(\"button\");\n        const id = product.getTitle().toLowerCase().replace(/\\s+/g, \"-\");\n        card.classList.add(\"product-card\");\n        card.id = id;\n        card.innerHTML = `\n      <img src=\"${product.getThumbnailURL()}\" alt=\"${product.getTitle()}\">\n      <div>\n        <h2>${product.getTitle()}</h2>\n        <h2>\\u{2B50}${product.getRating()}</h2>\n      </div>\n      <div>\n        <p>$${product.getDiscountedPrice()}</p>\n        <h2 class='stock'>\\u{1F4E6}${product.getStock()}</h2>\n      </div>\n    `;\n        productContainer.append(card);\n        addToCartBtn.innerText = \"Add to cart\";\n        card.append(addToCartBtn);\n        addToCartBtn.addEventListener(\"click\", ()=>{\n            product.updateStock();\n            const stockElement = document.querySelector(`#${id} .stock`);\n            stockElement.innerText = `\\u{1F4E6}` + product.getStock();\n        });\n    });\n};\n\n\nconst $becce34e5634ba9f$export$6d1731a321e8bdf4 = (products, category)=>{\n    return products.filter((product)=>product.getCategory().toLowerCase() === category.toLowerCase());\n};\nconst $becce34e5634ba9f$export$dad0ec053055dc44 = (products, maxPrice)=>{\n    return products.filter((product)=>product.getDiscountedPrice() <= maxPrice);\n};\n\n\n// src/utils/sorting.ts\nfunction $f33f9bb28051a492$export$77aa88b35c2ea503(products, sortBy) {\n    let sortedProducts;\n    if (sortBy === \"rate-des\") sortedProducts = [\n        ...products\n    ].sort((a, b)=>b.getRating() - a.getRating());\n    else if (sortBy === \"rate-asc\") sortedProducts = [\n        ...products\n    ].sort((a, b)=>a.getRating() - b.getRating());\n    else if (sortBy === \"price-des\") sortedProducts = [\n        ...products\n    ].sort((a, b)=>b.getDiscountedPrice() - a.getDiscountedPrice());\n    else if (sortBy === \"price-asc\") sortedProducts = [\n        ...products\n    ].sort((a, b)=>a.getDiscountedPrice() - b.getDiscountedPrice());\n    else sortedProducts = products;\n    return sortedProducts;\n}\n\n\nconst $b4e14b6b8da86996$var$sortSelect = document.querySelector(\"#sortSelect\");\nconst $b4e14b6b8da86996$var$filterForm = document.querySelector(\"#filterForm\");\nif (!$b4e14b6b8da86996$var$sortSelect || !$b4e14b6b8da86996$var$filterForm) throw new Error(\"Viktiga DOM-element kunde inte hittas!\");\nlet $b4e14b6b8da86996$var$products = [];\nlet $b4e14b6b8da86996$var$filteredProducts = [];\n/** Laddar och renderar produkter **/ const $b4e14b6b8da86996$var$loadProducts = async ()=>{\n    try {\n        $b4e14b6b8da86996$var$products = await (0, $b6a0b7007b404cc4$export$f2012bafb0501902)();\n        $b4e14b6b8da86996$var$filteredProducts = $b4e14b6b8da86996$var$products; // Initialt visas alla produkter\n        (0, $d3ff7d67e82b7d22$export$f4cee6d0d631069d)($b4e14b6b8da86996$var$products);\n    } catch (error) {\n        console.error(\"Fel vid h\\xe4mtning av produkter:\", error);\n    }\n};\n$b4e14b6b8da86996$var$loadProducts();\n/** Filtrering **/ $b4e14b6b8da86996$var$filterForm.addEventListener(\"submit\", (event)=>{\n    event.preventDefault();\n    const category = $b4e14b6b8da86996$var$filterForm.querySelector(\"select\").value;\n    const maxPriceInput = $b4e14b6b8da86996$var$filterForm.querySelector(\"input\");\n    const maxPrice = maxPriceInput.value ? parseFloat(maxPriceInput.value) : NaN;\n    $b4e14b6b8da86996$var$filteredProducts = category ? (0, $becce34e5634ba9f$export$6d1731a321e8bdf4)($b4e14b6b8da86996$var$products, category) : $b4e14b6b8da86996$var$products;\n    if (!isNaN(maxPrice)) $b4e14b6b8da86996$var$filteredProducts = (0, $becce34e5634ba9f$export$dad0ec053055dc44)($b4e14b6b8da86996$var$filteredProducts, maxPrice);\n    const sortedProducts = (0, $f33f9bb28051a492$export$77aa88b35c2ea503)($b4e14b6b8da86996$var$filteredProducts, $b4e14b6b8da86996$var$sortSelect.value);\n    (0, $d3ff7d67e82b7d22$export$f4cee6d0d631069d)(sortedProducts);\n});\n/** Sortering **/ $b4e14b6b8da86996$var$sortSelect.addEventListener(\"change\", ()=>{\n    const sortBy = $b4e14b6b8da86996$var$sortSelect.value;\n    const sortedProducts = (0, $f33f9bb28051a492$export$77aa88b35c2ea503)($b4e14b6b8da86996$var$filteredProducts, sortBy);\n    (0, $d3ff7d67e82b7d22$export$f4cee6d0d631069d)(sortedProducts);\n});\n\n\n//# sourceMappingURL=index.f2c795af.js.map\n","import { getAllProducts } from \"./api\";\nimport { renderProducts } from \"./ui/gui\";\nimport { filterByCategory, filterByMaxPrice } from \"./utils/filtering\";\nimport { getSortedProducts } from \"./utils/sorting\";\nimport { Product } from \"./models/Product\";\n\nconst sortSelect = document.querySelector(\"#sortSelect\") as HTMLSelectElement | null;\nconst filterForm = document.querySelector(\"#filterForm\") as HTMLFormElement | null;\n\nif (!sortSelect || !filterForm) {\n    throw new Error(\"Viktiga DOM-element kunde inte hittas!\");\n}\n\nlet products: Product[] = [];\nlet filteredProducts: Product[] = [];\n\n/** Laddar och renderar produkter **/\nconst loadProducts = async () => {\n    try {\n        products = await getAllProducts();\n        filteredProducts = products; // Initialt visas alla produkter\n        renderProducts(products);\n    } catch (error) {\n        console.error(\"Fel vid hÃ¤mtning av produkter:\", error);\n    }\n};\n\nloadProducts();\n\n/** Filtrering **/\nfilterForm.addEventListener(\"submit\", (event) => {\n    event.preventDefault();\n\n    const category = (filterForm.querySelector(\"select\") as HTMLSelectElement).value;\n    const maxPriceInput = filterForm.querySelector(\"input\") as HTMLInputElement;\n    const maxPrice = maxPriceInput.value ? parseFloat(maxPriceInput.value) : NaN;\n\n    filteredProducts = category ? filterByCategory(products, category) : products;\n    if (!isNaN(maxPrice)) {\n        filteredProducts = filterByMaxPrice(filteredProducts, maxPrice);\n    }\n\n    const sortedProducts = getSortedProducts(filteredProducts, sortSelect.value as \"rate-des\" | \"rate-asc\" | \"price-des\" | \"price-asc\");\n    renderProducts(sortedProducts);\n});\n\n/** Sortering **/\nsortSelect.addEventListener(\"change\", () => {\n    const sortBy = sortSelect.value as \"rate-des\" | \"rate-asc\" | \"price-des\" | \"price-asc\";\n    const sortedProducts = getSortedProducts(filteredProducts, sortBy);\n    renderProducts(sortedProducts);\n});\n","import { Product } from \"./models/Product\";\nimport { ProductType } from \"./models/types\";\n\nexport const getAllProducts = async (): Promise<Product[]> => {\n  const url = \"https://dummyjson.com/products\";\n  try {\n    const res = await fetch(url);\n    if (!res.ok) throw new Error(\"Failed to fetch products\");\n\n    const data = await res.json();\n\n    \n\n    return data.products.map((p: ProductType) => new Product(p));\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n};\n","import { ProductType } from \"./types\";\n\nexport class Product {\n    private title: string;\n    private price: number;\n    private discountPercentage: number;\n    private stock: number;\n    private rating: number;\n    private category: string;\n    private thumbnail: string;\n  \n    constructor(productData: ProductType) {\n      this.title = productData.title;\n      this.price = productData.price;\n      this.discountPercentage = productData.discountPercentage;\n      this.stock = productData.stock;\n      this.rating = productData.rating;\n      this.category = productData.category;\n      this.thumbnail = productData.thumbnail;\n    }\n  \n    getDiscountedPrice(): number {\n      return Math.round((this.price * (1 - this.discountPercentage / 100)) * 100) / 100;\n    }\n  \n    updateStock(): void {\n      if (this.stock > 0) this.stock--;\n    }\n  \n    getTitle(): string {\n      return this.title;\n    }\n  \n    getThumbnailURL(): string {\n      return this.thumbnail;\n    }\n  \n    getStock(): number {\n      return this.stock;\n    }\n  \n    getRating(): number {\n      return this.rating;\n    }\n  \n    // LÃ¤gg till getCategory-metod\n    getCategory(): string {\n      return this.category;\n    }\n  }\n  ","import { Product } from \"../models/Product\";\n\nexport const renderProducts = (products: Product[]): void => {\n  const productContainer = document.querySelector(\"#productCardContainer\") as HTMLDivElement;\n  productContainer.innerHTML = \"\";\n\n  products.forEach((product) => {\n    const card = document.createElement(\"div\");\n    const addToCartBtn = document.createElement(\"button\");\n    const id = product.getTitle().toLowerCase().replace(/\\s+/g, \"-\");\n\n    card.classList.add(\"product-card\");\n    card.id = id;\n\n    card.innerHTML = `\n      <img src=\"${product.getThumbnailURL()}\" alt=\"${product.getTitle()}\">\n      <div>\n        <h2>${product.getTitle()}</h2>\n        <h2>â­${product.getRating()}</h2>\n      </div>\n      <div>\n        <p>$${product.getDiscountedPrice()}</p>\n        <h2 class='stock'>ð¦${product.getStock()}</h2>\n      </div>\n    `;\n    \n    productContainer.append(card);\n\n    addToCartBtn.innerText = \"Add to cart\";\n    card.append(addToCartBtn);\n\n    addToCartBtn.addEventListener(\"click\", () => {\n      product.updateStock();\n      \n   \n      const stockElement = document.querySelector(`#${id} .stock`) as HTMLElement;\n      stockElement.innerText = `ð¦` + product.getStock();\n      \n\n      \n    });\n  });\n};\n","import { Product } from \"../models/Product\";\n\nexport const filterByCategory = (products: Product[], category: string): Product[] => {\n    return products.filter(product => product.getCategory().toLowerCase() === category.toLowerCase());\n  };\n  \n\nexport const filterByMaxPrice = (products: Product[], maxPrice: number): Product[] => {\n  return products.filter(product => product.getDiscountedPrice() <= maxPrice);\n};\n\n","// src/utils/sorting.ts\n\nimport { Product } from \"../models/Product\"; \n\nexport type SortOrder = \"ascending\" | \"descending\";\nexport type SortBy = \"rate-des\" | \"rate-asc\" | \"price-des\" | \"price-asc\";\n\n/**\n * Sorterar produkter baserat pÃ¥ pris eller betyg.\n * @param products - Array av produkter\n * @param sortBy - Sorteringskriterium\n * @returns En ny sorterad array av produkter\n */\nexport function getSortedProducts(products: Product[], sortBy: SortBy): Product[] {\n    let sortedProducts: Product[];\n\n    if (sortBy === \"rate-des\") {\n        sortedProducts = [...products].sort((a, b) => b.getRating() - a.getRating());\n    } else if (sortBy === \"rate-asc\") {\n        sortedProducts = [...products].sort((a, b) => a.getRating() - b.getRating());\n    } else if (sortBy === \"price-des\") {\n        sortedProducts = [...products].sort((a, b) => b.getDiscountedPrice() - a.getDiscountedPrice());\n    } else if (sortBy === \"price-asc\") {\n        sortedProducts = [...products].sort((a, b) => a.getDiscountedPrice() - b.getDiscountedPrice());\n    } else {\n        sortedProducts = products;\n    }\n\n    return sortedProducts;\n}\n"],"names":["$023a96c5b2c8ed93$export$264ad599d7cef668","constructor","productData","title","price","discountPercentage","stock","rating","category","thumbnail","getDiscountedPrice","Math","round","updateStock","getTitle","getThumbnailURL","getStock","getRating","getCategory","$b6a0b7007b404cc4$export$f2012bafb0501902","res","fetch","ok","Error","data","json","products","map","p","error","console","$d3ff7d67e82b7d22$export$f4cee6d0d631069d","productContainer","document","querySelector","innerHTML","forEach","product","card","createElement","addToCartBtn","id","toLowerCase","replace","classList","add","append","innerText","addEventListener","stockElement","$becce34e5634ba9f$export$6d1731a321e8bdf4","filter","$becce34e5634ba9f$export$dad0ec053055dc44","maxPrice","$f33f9bb28051a492$export$77aa88b35c2ea503","sortBy","sort","a","b","$b4e14b6b8da86996$var$sortSelect","$b4e14b6b8da86996$var$filterForm","$b4e14b6b8da86996$var$products","$b4e14b6b8da86996$var$filteredProducts","$b4e14b6b8da86996$var$loadProducts","event","preventDefault","value","maxPriceInput","parseFloat","NaN","isNaN"],"version":3,"file":"index.f2c795af.js.map"}